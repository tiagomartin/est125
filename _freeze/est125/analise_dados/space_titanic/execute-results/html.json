{
  "hash": "a111c8aff47832e3ed862a0c29bb12eb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Pré-processamento usando a base de dados Space Titanic\"\nformat: html\n---\n\n*Bem-vindo ao ano de 2912, onde suas habilidades em ciência de dados são necessárias para resolver um mistério cósmico. Recebemos uma transmissão de quatro anos-luz de distância e as coisas não parecem boas.*\n\n*A espaçonave Titanic foi um transatlântico interestelar lançado há um mês. Com quase 13.000 passageiros a bordo, a embarcação partiu em sua viagem inaugural transportando emigrantes de nosso sistema solar para três exoplanetas recém-habitáveis orbitando estrelas próximas.*\n\n*Ao contornar Alpha Centauri a caminho de seu primeiro destino - o tórrido 55 Cancri E - a incauta nave espacial Titanic colidiu com uma anomalia do espaço-tempo escondida dentro de uma nuvem de poeira. Infelizmente, ele teve um destino semelhante ao de seu homônimo de 1000 anos antes. Embora a nave tenha permanecido intacta, quase metade dos passageiros foram transportados para uma dimensão alternativa!*\n\n*Para ajudar as equipes de resgate e recuperar os passageiros perdidos, você é desafiado a prever quais passageiros foram transportados pela anomalia usando registros recuperados do sistema de computador danificado da espaçonave.*\n\n*Ajude a salvá-los e mude a história!*\n\nO conjunto de dados **\"Space Titanic\"** disponível no [Kaggle](https://www.kaggle.com/competitions/spaceship-titanic/data) é uma coleção de informações sobre uma hipotética tragédia espacial em uma nave chamada \"Starship Titanic\" e sua tarefa é prever se um passageiro foi transportado para uma dimensão alternativa durante a colisão da espaçonave com a anomalia do espaço-tempo. Para ajudá-lo a fazer essas previsões, você recebe um conjunto de registros pessoais recuperados do sistema de computador danificado da nave.\n\n\n## Sobre os dados\n\nO conjunto de dados refere-se aos registros pessoais de cerca de 8700 passageiros, mensurados nas seguintes características:\n\n-   **PassengerId** - Um ID exclusivo para cada passageiro. Cada Id assume a forma *gggg_pp* onde *gggg* indica um grupo com o qual o passageiro está viajando e *pp* é seu número dentro do grupo. As pessoas em um grupo geralmente são membros da família, mas nem sempre.\n\n-   **HomePlanet** - O planeta do qual o passageiro partiu, normalmente seu planeta de residência permanente.\n\n-   **CryoSleep** - Indica se o passageiro optou por ser colocado em animação suspensa durante a viagem. Os passageiros em sono criogênico estão confinados em suas cabines.\n\n-   **Cabine** - O número da cabine onde o passageiro está hospedado. Assume a forma *deck/num/side*, onde *side* pode ser *P* para bombordo ou *S* para estibordo.\n\n-   **Destination** - O planeta para o qual o passageiro irá desembarcar.\n\n-   **Idade** - A idade do passageiro.\n\n-   **VIP** - Se o passageiro pagou pelo serviço VIP especial durante a viagem.\n\n-   **RoomService**, **FoodCourt**, **ShoppingMall**, **Spa**, **VRDeck** - Valor que o passageiro pagou em cada uma das muitas comodidades de luxo do Titanic.\n\n-   **Nome** - O nome e o sobrenome do passageiro.\n\n-   **Transported** - Se o passageiro foi transportado para outra dimensão. Este é o alvo, a coluna que você está tentando prever.\n\nApesar desse conjunto de dados destinar-se ao aprendizado de máquina supervisionado, faremos, neste *script*, apenas a parte de pré-processamento, incluindo algumas análises exploratórias. Tentaremos responder às seguintes questões:\n\n  - De onde vieram os passageiros e qual a relação disso com ser transportado ou não?\n  - Em que cabine estavam os passageiros e qual a relação disso com ser transportado ou não?\n  - Para onde iriam os passageiros e qual a relação disso com ser transportado ou não?\n  - Quem estava sozinho e quem estava em grupo?\n  - Estar em sono profundo era uma boa ideia?\n  - Passageiros VIP tem menor risco de ser transportado?     \n  - Que fatores ajudaram alguém a não ser transportado?\n\n## Pacotes utilizados\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload <- function(pkg){\n  new.pkg <- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n  if (length(new.pkg))\n    install.packages(new.pkg, dependencies = TRUE)\n  sapply(pkg, require, character.only = TRUE)\n} \n\n## Pacotes utilizados nessa análise\n\npackages <- c(\"tidyverse\",'tidymodels', 'janitor', 'ggpubr', 'funModeling', 'ggalluvial', 'vip', 'skimr', 'VIM', 'patchwork', 'rio')\n\nload(packages)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  tidyverse  tidymodels     janitor      ggpubr funModeling  ggalluvial \n       TRUE        TRUE        TRUE        TRUE        TRUE        TRUE \n        vip       skimr         VIM   patchwork         rio \n       TRUE        TRUE        TRUE        TRUE        TRUE \n```\n\n\n:::\n:::\n\n\n## Leitura dos dados\n \n\n::: {.cell}\n\n```{.r .cell-code}\ndados = rio::import(\"https://raw.githubusercontent.com/tiagomartin/est125/refs/heads/main/dados/space_titanic.csv\")\ndados %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 8,693\nColumns: 14\n$ PassengerId  <chr> \"0001_01\", \"0002_01\", \"0003_01\", \"0003_02\", \"0004_01\", \"0…\n$ HomePlanet   <chr> \"Europa\", \"Earth\", \"Europa\", \"Europa\", \"Earth\", \"Earth\", …\n$ CryoSleep    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FA…\n$ Cabin        <chr> \"B/0/P\", \"F/0/S\", \"A/0/S\", \"A/0/S\", \"F/1/S\", \"F/0/P\", \"F/…\n$ Destination  <chr> \"TRAPPIST-1e\", \"TRAPPIST-1e\", \"TRAPPIST-1e\", \"TRAPPIST-1e…\n$ Age          <dbl> 39, 24, 58, 33, 16, 44, 26, 28, 35, 14, 34, 45, 32, 48, 2…\n$ VIP          <lgl> FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FA…\n$ RoomService  <dbl> 0, 109, 43, 0, 303, 0, 42, 0, 0, 0, 0, 39, 73, 719, 8, 32…\n$ FoodCourt    <dbl> 0, 9, 3576, 1283, 70, 483, 1539, 0, 785, 0, 0, 7295, 0, 1…\n$ ShoppingMall <dbl> 0, 25, 0, 371, 151, 0, 3, 0, 17, 0, NA, 589, 1123, 65, 12…\n$ Spa          <dbl> 0, 549, 6715, 3329, 565, 291, 0, 0, 216, 0, 0, 110, 0, 0,…\n$ VRDeck       <dbl> 0, 44, 49, 193, 2, 0, 0, NA, 0, 0, 0, 124, 113, 24, 7, 0,…\n$ Name         <chr> \"Maham Ofracculy\", \"Juanna Vines\", \"Altark Susent\", \"Sola…\n$ Transported  <lgl> FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, …\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados %>% df_status()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       variable q_zeros p_zeros q_na p_na q_inf p_inf      type unique\n1   PassengerId       0    0.00    0 0.00     0     0 character   8693\n2    HomePlanet       0    0.00    0 0.00     0     0 character      4\n3     CryoSleep    5439   62.57  217 2.50     0     0   logical      2\n4         Cabin       0    0.00    0 0.00     0     0 character   6561\n5   Destination       0    0.00    0 0.00     0     0 character      4\n6           Age     178    2.05  179 2.06     0     0   numeric     80\n7           VIP    8291   95.38  203 2.34     0     0   logical      2\n8   RoomService    5577   64.16  181 2.08     0     0   numeric   1273\n9     FoodCourt    5456   62.76  183 2.11     0     0   numeric   1507\n10 ShoppingMall    5587   64.27  208 2.39     0     0   numeric   1115\n11          Spa    5324   61.24  183 2.11     0     0   numeric   1327\n12       VRDeck    5495   63.21  188 2.16     0     0   numeric   1306\n13         Name       0    0.00    0 0.00     0     0 character   8474\n14  Transported    4315   49.64    0 0.00     0     0   logical      2\n```\n\n\n:::\n:::\n\n\nPodemos observar que, com exceção das variáveis **PassengerId** e **Transported**, todas as outras possuem dados ausentes, representando, em cada uma delas, aproximadamente 2,5% das observações.\n\n\n\n## Explorando os dados\n\nNa própria apresentação da base de dados, na descrição das variáveis, foi informado que o atributo **PassengerId** assume a forma *gggg_pp* onde *gggg* indica um grupo com o qual o passageiro está viajando e *pp* é seu número dentro do grupo. Dessa forma, vamos criar duas novas variáveis, **PassGroup** para o grupo e **nGroup** para o número do passageiro no grupo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados = dados %>%\n  separate(PassengerId, c(\"PassGroup\", \"nGroup\"), sep = \"_\", remove = FALSE) %>% \n  mutate(PassGroup = as.numeric(PassGroup))\n```\n:::\n\n\nOutra variável que possui mais de uma informação embutida é a variável **Cabin**. Vamos separá-la em **CabinDeck**, representando o *deck* da cabine, podendo assumir os valores A, B, C, D, E, F e T, e **CabinSide**, podendo assumir os valores P para bombordo e S para estibordo. Também criaremos a variável **CabinNum**, que representa os números das cabines.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados = dados %>%\n  separate(Cabin, c(\"CabinDeck\", \"CabinNum\", \"CabinSide\"), sep = \"/\") %>% \n  mutate(CabinDeck = as.factor(CabinDeck),\n         CabinSide = as.factor(CabinSide))\n```\n:::\n\n\nA função `ggscatmat()` é uma função do pacote `GGally` do R que cria uma matriz de gráficos de dispersão para visualizar a relação entre várias variáveis numéricas em um conjunto de dados. Essa função é útil para visualizar rapidamente as correlações entre as variáveis, bem como para detectar padrões e tendências. No gráfico abaixo, ainda separamos os elementos de acordo com a sua classe, descrita pela variável **Transported**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados %>% \n  mutate(Transported = as.numeric(Transported)) %>% \n  select_if(is.numeric) %>% \n  GGally::ggscatmat(color = \"Transported\", corMethod = \"pearson\")+\n  theme_pubclean()\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\nNote que fica clara a necessidade de transformações para as variáveis **RoomService**, **FoodCourt**, **ShoppingMall**, **Spa** e **VRDeck**, devido à sua distribuição assimétrica. Um fato interessante acontece com a variável **Age**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Age \ndados %>% \n  ggplot(aes(x=Age, fill = Transported))+\n  geom_density(alpha =0.5)+\n  theme(legend.position='bottom')\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nObserve que, para passageiros com idade menor de 10 anos, aproximadamente, a probabilidade do passageiro ser transportado é maior que não ser transportado. Isso sugere, talvez, a criação de um atributo captando essa informação.\n\n### De onde vieram os passageiros e qual a relação disso com ser transportado ou não?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados %>% \n  ggplot(aes(x=HomePlanet))+\n  geom_bar(stat = \"count\", fill=\"steelblue\")\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nNote que a maioria dos passageiros embarcaram na Terra (Earth). Além disso, existem observações ausentes. Qual a relação da origem dos passageiros com o fato de ser transportado ou não?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados %>% \n  ggplot(aes(x=HomePlanet, fill = Transported))+\n  geom_bar(stat = \"count\")+\n  theme(legend.position='bottom')\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nQuem veio da Terra tem menos chances de ser transportado?\n\n## Em que cabine estavam os passageiros e qual a relação disso com ser transportado ou não?\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 = dados %>% \n  ggplot((aes(x=CabinDeck))) +\n  geom_bar(stat = 'count', fill= 'steelblue')\n\np2 = dados %>% \n  ggplot((aes(x=CabinSide))) +\n  geom_bar(stat = 'count', fill= 'steelblue')\n\np1 + p2\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\nA maioria dos passageiros estavam alocados nos decks F e G. Existem observações faltantes. Os passageiros foram alocados em ambos os lados (estibordo e bombordo) de forma semelhante. Qual a relação disso com ser transportado ou não?\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 = dados %>% \n  ggplot((aes(x=CabinDeck, fill = Transported))) +\n  geom_bar(stat = 'count')\n\np2 = dados %>% \n  ggplot((aes(x=CabinSide, fill = Transported))) +\n  geom_bar(stat = 'count')\n\np1 + p2 + plot_layout(guides = \"collect\") &\n  theme(legend.position='bottom')\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nAparentemente, quem está alocando nos decks B e C tem mais chance de ser transportado. O mesmo acontece para quem está situado no estibordo.\n\n## Para onde iriam os passageiros e qual a relação disso com ser transportado ou não?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados %>% \n  ggplot((aes(x=Destination))) +\n  geom_bar(stat = 'count', fill= 'steelblue')\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nA maioria dos passageiros tinham como destino o Planeta \"TRAPPIST-1e\". Qual a relação disso com ser transportado ou não?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados %>% \n  ggplot((aes(x=Destination, fill= Transported))) +\n  geom_bar(stat = 'count')+\n  theme(legend.position='bottom')\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nQuem iria para o Planeta \"55 Cancri e\" teria mais chances de ser transportado?\n\n## Quem estava sozinho e quem estava em grupo?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados %>% add_count(PassGroup, name = \"GroupSize\") %>% \n  mutate(IsAlone = ifelse(GroupSize==1, 'yes', 'no')) %>% \n  ggplot(aes(x=IsAlone))+\n  geom_bar(stat = \"count\", fill= 'steelblue')\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\nA maioria dos passageiros estavam viajando sozinho. Viajar sozinho influencia no fato de ser transportado?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados %>% add_count(PassGroup, name = \"GroupSize\") %>% \n  mutate(IsAlone = ifelse(GroupSize==1, 'yes', 'no')) %>% \n  ggplot(aes(x=IsAlone, fill= Transported))+\n  geom_bar(stat = \"count\")+\n  theme(legend.position='bottom')\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nTalvez seja uma boa estar sozinho neste momento! 😃\n\n## Estar em sono profundo era uma boa ideia?\n\n![](/images/cryo.jpg){.nostretch fig-align=\"center\" width=\"1000px\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados %>% \n  ggplot(aes(x=CryoSleep))+\n  geom_bar(stat = \"count\", fill= 'steelblue')\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n \nA maioria dos passageiros não estavam em sono profundo. Isso influenciou no fato de ser transportado? \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados %>% \n  ggplot(aes(x=CryoSleep, fill= Transported))+\n  geom_bar(stat = \"count\")+\n  theme(legend.position='bottom')\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\nEstar em sono profundo não me pereceu ser uma boa ideia!\n\n\n## Passageiros VIP tem menor risco de ser transportado?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados %>% \n  ggplot(aes(x=VIP))+\n  geom_bar(stat = \"count\", fill= 'steelblue')\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\nA grande maioria dos passageiros não eram VIPs. Isso influenciou no fato de ser transportado?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados %>% \n  ggplot(aes(x=VIP, fill= Transported))+\n  geom_bar(stat = \"count\")+\n  theme(legend.position='bottom')\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\nO fato de ser VIP aparentemente não possui relação com o fato de ser transportado!\n\n## Que fatores ajudaram alguém a não ser transportado?\n\nVamos analisar os gastos dos passageiros.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# RoomService \np1 = dados %>% \n  mutate(RoomService = log10(RoomService)) %>% \n  ggplot(aes(x=RoomService, fill = Transported))+\n  geom_density(alpha =0.5) \n\n# Spa \np2 = dados %>% \n  mutate(Spa = log10(Spa)) %>% \n  ggplot(aes(x=Spa, fill = Transported))+\n  geom_density(alpha =0.5) \n\n# VRDeck \np3 = dados %>% \n  mutate(VRDeck = log10(VRDeck)) %>% \n  ggplot(aes(x=VRDeck, fill = Transported))+\n  geom_density(alpha =0.5) \n\np1 + p2 + p3 + plot_layout(guides = \"collect\") &\n  theme(legend.position='bottom')\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\nGastos com RoomService, Spa e VRDeck aumentam a chance do passageiro não ser transportado!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# FoodCourt\np1 = dados %>% \n  mutate(FoodCourt = log10(FoodCourt)) %>% \n  ggplot(aes(x=FoodCourt, fill = Transported))+\n  geom_density(alpha =0.5)\n\n# ShoppingMall\np2 = dados %>% \n  mutate(ShoppingMall = log10(ShoppingMall)) %>% \n  ggplot(aes(x=ShoppingMall, fill = Transported))+\n  geom_density(alpha =0.5)\n\np1 + p2 + plot_layout(guides = \"collect\") &\n  theme(legend.position='bottom')\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nJá os gastos com FoodCourt e ShoppingMall aumentam a chance do passageiro ser transportado. Outra informação interessante pode ser obtida quando analisamos as variáveis HomePlanet e CryoSleep.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# HomePlanet e CryoSleep\ndados %>% \n  ggplot(aes(x=HomePlanet, fill= Transported))+\n  geom_bar(stat = \"count\")+\n  facet_grid(~CryoSleep)+\n  theme(legend.position='bottom')\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\nNote que, para os passageiros em suspensão profunda, o fato de não terem embarcados em Earth aumenta muito a chance de ser transportado para a dimesão alternativa! \n\n\n::: {.callout-note title=\"Resumindo...\"}\nApós a fase de exploração dos dados, algumas sugestões de _feature engineering_ foram aparecendo:\n\n  - Criar uma variável indicando se o passageiro é menor de 14 anos, por exemplo;\n  - Criar uma variável indicando se o passageiro é originário da Terra;\n  - Criar uma variável indicando se o passageiro viajava sozinho;\n  - Realizar transformação (raíz quadrada) nas variáveis RoomService, Spa, VRDeck, FoodCourt e ShoppingMall.\n  - Criar uma variável com o total de \"despesas supérfluas\" (RoomService + Spa + VRDeck);\n  - Criar uma variável com o total de \"despesas básicas\" (FoodCourt + ShoppingMall);\n  \n:::\n\n\nPara evitar problema de vazamento de dados, o passo inicial de qualquer análise é separar o conjunto de treinamento, validação e teste: os dados de treinamento devem ser usados exclusivamente para treinar o modelo, enquanto os dados de validação e teste devem ser usados para avaliar sua performance. Isso evita que informações de teste ou validação sejam usadas para treinar o modelo e comprometam os resultados.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(12345)\nsplits = dados %>% initial_split(strata = Transported)\n\ndados_treino = training(splits)\ndados_teste = testing(splits)\n```\n:::\n\n\nCriando a variável GroupSize apenas para o conjunto de dados de treinamento:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_treino = dados_treino %>% add_count(PassGroup, name = \"GroupSize\") \n```\n:::\n\n\n\n## Tratamento de dados faltantes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_treino %>% df_status()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       variable q_zeros p_zeros q_na p_na q_inf p_inf      type unique\n1   PassengerId       0    0.00    0 0.00     0     0 character   6519\n2     PassGroup       0    0.00    0 0.00     0     0   numeric   4949\n3        nGroup       0    0.00    0 0.00     0     0 character      8\n4    HomePlanet       0    0.00    0 0.00     0     0 character      4\n5     CryoSleep    4075   62.51  164 2.52     0     0   logical      2\n6     CabinDeck       0    0.00    0 0.00     0     0    factor      9\n7      CabinNum      13    0.20  153 2.35     0     0 character   1722\n8     CabinSide       0    0.00  153 2.35     0     0    factor      2\n9   Destination       0    0.00    0 0.00     0     0 character      4\n10          Age     135    2.07  133 2.04     0     0   numeric     80\n11          VIP    6213   95.31  158 2.42     0     0   logical      2\n12  RoomService    4178   64.09  133 2.04     0     0   numeric   1088\n13    FoodCourt    4096   62.83  137 2.10     0     0   numeric   1247\n14 ShoppingMall    4187   64.23  161 2.47     0     0   numeric    951\n15          Spa    3980   61.05  146 2.24     0     0   numeric   1103\n16       VRDeck    4155   63.74  134 2.06     0     0   numeric   1086\n17         Name       0    0.00    0 0.00     0     0 character   6356\n18  Transported    3236   49.64    0 0.00     0     0   logical      2\n19    GroupSize       0    0.00    0 0.00     0     0   integer      8\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmiss = summary(aggr(dados_treino, sortVar=TRUE))$combinations\n```\n\n::: {.cell-output-display}\n![](space_titanic_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Variables sorted by number of missings: \n     Variable      Count\n    CryoSleep 0.02515723\n ShoppingMall 0.02469704\n          VIP 0.02423685\n     CabinNum 0.02346986\n    CabinSide 0.02346986\n          Spa 0.02239607\n    FoodCourt 0.02101549\n       VRDeck 0.02055530\n          Age 0.02040190\n  RoomService 0.02040190\n  PassengerId 0.00000000\n    PassGroup 0.00000000\n       nGroup 0.00000000\n   HomePlanet 0.00000000\n    CabinDeck 0.00000000\n  Destination 0.00000000\n         Name 0.00000000\n  Transported 0.00000000\n    GroupSize 0.00000000\n```\n\n\n:::\n:::\n\n\nO gráfico acima mostra (à esquerda) mostra a proporção de _missing values_ para cada variável da base de dados e todas as combinações de valores ausentes (vermelho) e observados (azul) presentes nos dados (gráfico à direita). \n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(miss[rev(order(miss[,2])),])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                            Combinations Count   Percent\n1  0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0  5306 81.392852\n38 0:0:0:0:1:0:0:0:0:0:0:0:0:0:0:0:0:0:0   136  2.086210\n5  0:0:0:0:0:0:0:0:0:0:0:0:0:1:0:0:0:0:0   136  2.086210\n17 0:0:0:0:0:0:0:0:0:0:1:0:0:0:0:0:0:0:0   133  2.040190\n3  0:0:0:0:0:0:0:0:0:0:0:0:0:0:1:0:0:0:0   127  1.948152\n28 0:0:0:0:0:0:1:1:0:0:0:0:0:0:0:0:0:0:0   125  1.917472\n```\n\n\n:::\n:::\n\n\nNote que, apesar de termos aproximadamente 2,5% de dados faltantes em cada variável, temos na base de dados aproximadamente 76% de casos completos, inviabilizando o descarte dessas observações incompletas.\n\n\n::: {.callout-tip title=\"Dica\"}\nUm consenso entre especialistas é que, se uma variável tem mais de 20% de seus dados faltantes, talvez seja melhor excluí-la e entender as razões dos valores ausentes. Se a proporção de valores ausentes é menor do que isso, é possível preencher esses dados utilizando alguma técnica de imputação, dependendo do tipo de dado. Já quando há menos de 2% de valores faltantes, a exclusão desses registros pode ser uma opção, já que não afetará significativamente a base de dados.\n:::\n\nNo entanto, é importante avaliar os efeitos do tratamento dos valores ausentes na análise e nos resultados finais, para garantir que as decisões tomadas sejam embasadas e coerentes com os objetivos do estudo. Esse processo deverá ser feito com parcimônia, sob pena de causar um viés de informação. A imputação pode introduzir viés de informação na medida em que os valores imputados podem não ser representativos da realidade ou podem não capturar a variabilidade dos dados ausentes.\n\n\n::: {.callout-note title=\"Nota\"}\nPara realizar a imputação das variáveis usaremos as seguintes estratégias:\n\n  - Para as variáveis **CryoSleep**, **RoomService**, **FoodCourt**, **ShoppingMall**, **Spa** e **VRDeck**: Se CryoSleep é _missing_ e pelo menos uma das variáveis de gastos for maior que zero, então imputaremos CryoSleep como FALSE (Se tem gasto, significa que não está em suspensão profunda). Se CryoSleep é TRUE e alguma variável de gastos for _missing_, então essa variável será imputada com o valor zero (Quem está em suspensão profunda não tem gastos). Além disso, imputaremos o restante dos _missings_ utilizando imputação knn, considerando 2 vizinhos e as variáveis PassGroup, CabinDeck, CabinNum, CabinSide.\n  \n  - As demais variáveis serão imputadas utilizando bagged trees.\n:::\n\nPodemos então construir nossa receita para realizar todo o pré-processamento:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSTRecipe = recipe(Transported ~ ., data = dados_treino) %>% \n  update_role(PassengerId, Name, new_role = \"ID\") %>%\n  step_mutate(\n    IsAlone = ifelse(GroupSize==1, 1, 0) %>% as.factor(),\n    CabinNum = as.numeric(CabinNum),\n    nGroup = as.numeric(nGroup),\n    VIP = as.factor(VIP),\n    CryoSleep = ifelse((RoomService > 0 | FoodCourt > 0 | ShoppingMall > 0 | Spa > 0 | VRDeck > 0), replace_na(CryoSleep, FALSE),TRUE),\n    CryoSleep = as.factor(CryoSleep)) %>% \n  step_impute_knn(CryoSleep, neighbors = 2, impute_with = imp_vars(PassGroup, CabinDeck, CabinNum, CabinSide)) %>% \n  step_mutate(\n    RoomService = ifelse(CryoSleep==TRUE, replace_na(RoomService, 0),RoomService),\n    FoodCourt = ifelse(CryoSleep==TRUE, replace_na(FoodCourt, 0),FoodCourt),\n    ShoppingMall = ifelse(CryoSleep==TRUE, replace_na(ShoppingMall, 0), ShoppingMall),\n    Spa = ifelse(CryoSleep==TRUE, replace_na(Spa, 0), Spa),\n    VRDeck = ifelse(CryoSleep==TRUE, replace_na(VRDeck, 0), VRDeck)\n  ) %>% \n  step_impute_knn(RoomService, FoodCourt, ShoppingMall, Spa, VRDeck, neighbors = 2, \n                  impute_with = imp_vars(PassGroup, CabinDeck, CabinNum, CabinSide)) %>%\n  step_impute_bag(Age, VIP, CryoSleep, Destination, HomePlanet, CabinDeck, CabinNum, \n                  CabinSide) %>%\n  step_mutate_at(RoomService:VRDeck, fn= ~log10(. + 1)) %>% \n  step_mutate(despesasSuperfluas = RoomService + Spa + VRDeck,\n              despesasBasicas = FoodCourt + ShoppingMall,\n              Isearth = ifelse(HomePlanet=='Earth', 1, 0) %>% as.factor(),\n              Iskid = ifelse(Age < 14, 1, 0) %>% as.factor()) %>% \n  prep(verbose=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\noper 1 step mutate [training] \noper 2 step impute knn [training] \noper 3 step mutate [training] \noper 4 step impute knn [training] \noper 5 step impute bag [training] \noper 6 step mutate at [training] \noper 7 step mutate [training] \nThe retained training set is ~ 1.74 Mb  in memory.\n```\n\n\n:::\n\n```{.r .cell-code}\ndados_prep = bake(STRecipe, new_data = NULL)\n```\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_prep %>% \n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  PassengerId     PassGroup        nGroup       HomePlanet   CryoSleep   \n 0002_01:   1   Min.   :   2   Min.   :1.000         : 133   FALSE:3910  \n 0003_01:   1   1st Qu.:2306   1st Qu.:1.000   Earth :3482   TRUE :2609  \n 0004_01:   1   Median :4605   Median :1.000   Europa:1610               \n 0005_01:   1   Mean   :4620   Mean   :1.515   Mars  :1294               \n 0006_01:   1   3rd Qu.:6880   3rd Qu.:2.000                             \n 0006_02:   1   Max.   :9280   Max.   :8.000                             \n (Other):6513                                                            \n   CabinDeck       CabinNum      CabinSide        Destination        Age       \n F      :2085   Min.   :   1.0   P:3273                 : 131   Min.   : 0.00  \n G      :1916   1st Qu.: 487.0   S:3246    55 Cancri e  :1345   1st Qu.:19.00  \n E      : 644   Median : 922.0             PSO J318.5-22: 604   Median :27.00  \n B      : 587   Mean   : 889.1             TRAPPIST-1e  :4439   Mean   :28.72  \n C      : 584   3rd Qu.:1256.5                                  3rd Qu.:37.00  \n D      : 361   Max.   :1722.0                                  Max.   :79.00  \n (Other): 342                                                                  \n    VIP        RoomService      FoodCourt       ShoppingMall   \n FALSE:6371   Min.   :0.000   Min.   :0.0000   Min.   :0.0000  \n TRUE : 148   1st Qu.:0.000   1st Qu.:0.0000   1st Qu.:0.0000  \n              Median :0.000   Median :0.0000   Median :0.0000  \n              Mean   :0.778   Mean   :0.8493   Mean   :0.7138  \n              3rd Qu.:1.724   3rd Qu.:1.9085   3rd Qu.:1.4698  \n              Max.   :4.156   Max.   :4.4744   Max.   :4.3709  \n                                                               \n      Spa             VRDeck                       Name        GroupSize    \n Min.   :0.0000   Min.   :0.0000                     : 150   Min.   :1.000  \n 1st Qu.:0.0000   1st Qu.:0.0000   Alraium Disivering:   2   1st Qu.:1.000  \n Median :0.0000   Median :0.0000   Ankalik Nateansive:   2   Median :1.000  \n Mean   :0.8192   Mean   :0.7762   Anton Woody       :   2   Mean   :1.781  \n 3rd Qu.:1.7817   3rd Qu.:1.6532   Apix Wala         :   2   3rd Qu.:2.000  \n Max.   :4.3504   Max.   :4.3826   Asch Stradick     :   2   Max.   :8.000  \n                                   (Other)           :6359                  \n Transported     IsAlone  despesasSuperfluas despesasBasicas Isearth  Iskid   \n Mode :logical   0:2563   Min.   : 0.000     Min.   :0.000   0:3037   0:5795  \n FALSE:3236      1:3956   1st Qu.: 0.000     1st Qu.:0.000   1:3482   1: 724  \n TRUE :3283               Median : 2.196     Median :0.699                    \n                          Mean   : 2.373     Mean   :1.563                    \n                          3rd Qu.: 4.397     3rd Qu.:2.945                    \n                          Max.   :10.508     Max.   :7.635                    \n                                                                              \n```\n\n\n:::\n:::\n\n\nOutras transformações se fazem necessárias e serão realizadas em momento oportuno.\n",
    "supporting": [
      "space_titanic_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "750fcb7594ad91770961e2abd28c0e36",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Regras de Associação\"\nformat: \n  revealjs:\n    width: 1600\n    height: 900\n    footer: \"\"\n    theme: quartomonothemer.scss\n    slide-number: c/t\n    show-slide-number: all\nincremental: false\ncode-link: true\nbibliography: references.bib\ntitle-slide-attributes:\n    data-background-image: /images/back.jpeg\n    data-background-size: cover\n    data-background-opacity: \"0.3\"\nexecute:\n  echo: true\n---\n\n\n## Introdução\n\n<br>\n\nAs bases de dados apresentadas até agora compartilham uma propriedade comum: todas elas são compostas por um conjunto de objetos caracterizados por um conjunto de características (atributos).\n \n. . .\n\n\nExiste outro tipo de base de dados, muito comum em alguns ambientes empresariais, que relaciona conjuntos de itens que ocorrem em transações.\n\n\n## Introdução\n\n<br>\n\nEsses dados são muito valiosos para os negócios, pois permitem que sejam extraídas informações sobre o comportamento de compras de cada cliente, podendo ser usados na realização de promoções e campanhas de marketing, gestão de estoques, definição de catálogos, análise de perdas, relacionamento com clientes e muitas outras ações.\n\n. . .\n\nO exemplo típico é o do carrinho de supermercado.\n\n\n## Introdução\n\n<br>\n\nQuando alguém vai ao supermercado, faz uma compra e passa na caixa registradora, as informações de quais produtos foram comprados, a quantidade e os preços pagos ficam armazenados no banco de dados do supermercado. \n\n\n\n. . .\n\n\nCada registro desses é chamado de **transação** e, por isso, tais bases de dados são denominadas transacionais.\n\n\n\n## Base de dados transacionais\n\n<p align=\"center\">  \nExemplo de base de dados transacional.</p>\n\n<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  overflow:hidden;padding:30px 5px;word-break:normal;}\n.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  font-weight:normal;overflow:hidden;padding:30px 5px;word-break:normal;}\n.tg .tg-c3ow{border-color:inherit;text-align:center;vertical-align:top}\n.tg .tg-7btt{border-color:inherit;font-weight:bold;text-align:center;vertical-align:top}\n.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\"><thead>\n  <tr>\n    <th class=\"tg-7btt\">TID</th>\n    <th class=\"tg-7btt\">Itens</th>\n  </tr></thead>\n<tbody>\n  <tr>\n    <td class=\"tg-c3ow\">T1</td>\n    <td class=\"tg-0pky\">Pão, Leite</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T2</td>\n    <td class=\"tg-0pky\">Pão, Fralda, Cerveja, Ovos</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T3</td>\n    <td class=\"tg-0pky\">Leite, Fralda, Cerveja, Coca</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T4</td>\n    <td class=\"tg-0pky\">Pão, Leite, Fralda, Cerveja</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T5</td>\n    <td class=\"tg-0pky\">Pão, Leite, Fralda, Coca</td>\n  </tr>\n  <tr>\n  </tr>\n</tbody>\n</table>\n\n\n. . .\n\n\n<p align=\"center\">  \nCada **transação** é composta por uma identificação (**TID**) e uma lista de itens.</p>\n\n\n\n\n\n\n## Base de dados transacionais\n\n<p align=\"center\">  \nExemplo de base de dados transacional.</p>\n\n<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  overflow:hidden;padding:30px 5px;word-break:normal;}\n.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  font-weight:normal;overflow:hidden;padding:30px 5px;word-break:normal;}\n.tg .tg-c3ow{border-color:inherit;text-align:center;vertical-align:top}\n.tg .tg-7btt{border-color:inherit;font-weight:bold;text-align:center;vertical-align:top}\n.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\"><thead>\n  <tr>\n    <th class=\"tg-7btt\">TID</th>\n    <th class=\"tg-7btt\">Itens</th>\n  </tr></thead>\n<tbody>\n  <tr>\n    <td class=\"tg-c3ow\">T1</td>\n    <td class=\"tg-0pky\">Pão, Leite</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T2</td>\n    <td class=\"tg-0pky\">Pão, Fralda, Cerveja, Ovos</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T3</td>\n    <td class=\"tg-0pky\">Leite, Fralda, Cerveja, Coca</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T4</td>\n    <td class=\"tg-0pky\">Pão, Leite, Fralda, Cerveja</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T5</td>\n    <td class=\"tg-0pky\">Pão, Leite, Fralda, Coca</td>\n  </tr>\n  <tr>\n  </tr>\n</tbody>\n</table>\n\n\n. . .\n\n\n- **Itens:** I = {Pão, Leite, Fralda, Cerveja, Ovos, Coca}.\n\n- **Banco de dados:** D = {T1, T2, T3, T4, T5}.\n\n- **Exemplo de transação:** T3 = \\{Leite, Fralda, Cerveja, Coca \\}\n\n\n\n## Representação binária de uma base transacional\n\n<br>\n\nVamos assumir que cada variável da base de dados $D$ é binária. \n\n. . .\n\n\n| TID | Leite | Pão | Fralda | Cerveja | Ovos | Coca |\n|:---:|:-----:|:---:|:------:|:-------:|:----:|:----:|\n|  T1 |   1   |  1  |    0   |    0    |   0  |   0  |\n|  T2 |   0   |  1  |    1   |    1    |   1  |   0  |\n|  T3 |   1   |  0  |    1   |    1    |   0  |   1  |\n|  T4 |   1   |  1  |    1   |    1    |   0  |   0  |\n|  T5 |   1   |  1  |    1   |    0    |   0  |   1  |\n\n\n\n## Conceitos Importantes \n\n<br>\n\n- **Itemset:** Conjunto de itens que ocorrem juntos em uma transação.\n    - **Exemplo:** \\{Leite, Pão, Fralda\\}\n    - **k-itemset:** Um conjunto que contém $k$ itens.\n\n\n. . .\n\n- **Support count ($\\mathbf{\\sigma}$):**  Frequência da ocorrência de um itemset\n    - **Exemplo:**} $\\mathbf{\\sigma}$ ({Leite, Pão,Fralda}) = 2\n    \n\n\n\n## Conceitos Importantes \n\n\n<br>\n\n- **Suporte (sup):** Proporção de transações que contém um itemset.\n    $$ \\text{sup}(X) = \\frac{\\text{Número de transações contendo } X}{\\text{Número total de transações}} $$\n    - **Exemplo:** sup({Leite, Pão, Fralda}) = $\\dfrac{2}{5}$\n\n\n\n. . .\n\n\n- **Conjunto Frequente (Frequent Itemset):** Um conjunto cujo suporte é maior ou igual a um dado limite **minsup**.\n\n\n\n## Regras de Associação\n\n<br>\n\n- Uma **regra de associação** é uma implicação da forma $(X \\Rightarrow Y)$, onde $X$ e $Y$ são **conjuntos frequentes** de itens e $X \\cap Y = \\emptyset$.\n    - $R_1$: \\{Cerveja\\} $\\Rightarrow$ \\{Fralda\\}.\n    - $R_2$: \\{Cerveja, Pão\\} $\\Rightarrow$ \\{Leite\\}.\n    - $R_3$: \\{Leite, Pão\\} $\\Rightarrow$ \\{Fralda,Coca\\}.\n    \n\n. . .\n\n- Queremos fazer isso eficientemente pois os bancos de dados relacionados a isso são comumente muito grandes.\n\n\n## Métricas para Avaliar as Regras\n\n- **Suporte (sup):** Proporção das transações que contém ambos $X$ e $Y$.\n\n\n$$Sup(X \\Rightarrow Y) = \\dfrac{\\mathbf{\\sigma}(X \\cup Y)}{|T|}$$\n\n\nem que $|T|$ representa o número de transações da base.\n\n\n. . .\n\n\n- **Confiança (conf):** Mede a frequência de itens em $Y$ que aparece nas transações que contêm $X$.\n\n$$Conf(X \\Rightarrow Y) = \\dfrac{\\mathbf{\\sigma}(X \\cup Y)}{\\mathbf{\\sigma}(X)}$$\n\nonde $\\mathbf{\\sigma}(X)$  é a contagem do suporte do antecedente da regra.\n\n\n\n## Métricas para Avaliar as Regras\n\n- **Exemplo:** Seja a regra de associação: \\{Leite, Fralda\\} $\\Rightarrow$ \\{Cerveja\\}\n\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n<p></p>\n\n<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  overflow:hidden;padding:30px 5px;word-break:normal;}\n.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  font-weight:normal;overflow:hidden;padding:30px 5px;word-break:normal;}\n.tg .tg-c3ow{border-color:inherit;text-align:center;vertical-align:top}\n.tg .tg-7btt{border-color:inherit;font-weight:bold;text-align:center;vertical-align:top}\n.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\"><thead>\n  <tr>\n    <th class=\"tg-7btt\">TID</th>\n    <th class=\"tg-7btt\">Itens</th>\n  </tr></thead>\n<tbody>\n  <tr>\n    <td class=\"tg-c3ow\">T1</td>\n    <td class=\"tg-0pky\">Pão, Leite</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T2</td>\n    <td class=\"tg-0pky\">Pão, Fralda, Cerveja, Ovos</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T3</td>\n    <td class=\"tg-0pky\">Leite, Fralda, Cerveja, Coca</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T4</td>\n    <td class=\"tg-0pky\">Pão, Leite, Fralda, Cerveja</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T5</td>\n    <td class=\"tg-0pky\">Pão, Leite, Fralda, Coca</td>\n  </tr>\n  <tr>\n  </tr>\n</tbody>\n</table>\n:::\n\n::: {.column width=\"50%\" .fragment}\n\n$$\n\\begin{eqnarray*}\nSup &=& \\dfrac{\\mathbf{\\sigma}(\\text{Leite}, \\text{Fralda}, \\text{Cerveja})}{5} \\\\ &=& \\dfrac{2}{5} = 0,40\\\\ Conf &=& \\dfrac{\\mathbf{\\sigma}(\\text{Leite}, \\text{Fralda}, \\text{Cerveja})}{\\mathbf{\\sigma}(\\text{Leite}, \\text{Fralda})} \\\\ &=& \\dfrac{2}{3} = 0,67\n\\end{eqnarray*}\n$$\n\n\n:::\n\n::::\n\n\n\n\n## Métricas para Avaliar as Regras\n\n<br>\n\n- A regra $X \\Rightarrow Y$  ocorre no conjunto de transações $T$ com **confiança** $c$ se $c\\%$ das transações em $T$ em que ocorre $X$ também ocorre $Y$.\n\n. . .\n\n- A regra $X \\Rightarrow Y$ tem **suporte** $s$ se em $s\\%$ das transações em $D$ ocorrem $X$ e $Y$.\n\n\n## Tarefa de mineração de regras de associação\n\n- Dado um conjunto de transações $T$, a **tarefa de mineração de regras de associação** é encontrar todas as regras que:\n    - Suporte $\\geqslant$ *minsup* estabelecido pelo usuário.\n    - Confiança $\\geqslant$ *minconf* definido pelo usuário.\n\n\n. . . \n\n- **Abordagem da Força Bruta:**\n    - Listar todas as regras possíveis.\n    - Calcular o suporte e a confiança para cada regra.\n    - Podar regras que não atendem os fatores *minsup* e *minconf*.\n    \n    \n. . .\n\n- **Computacionalmente proibitivo!**\n\n\n\n\n## Tarefa de mineração de regras de associação\n\n\n:::: {.columns}\n\n::: {.column width=\"42%\"}\n<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  overflow:hidden;padding:30px 5px;word-break:normal;}\n.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  font-weight:normal;overflow:hidden;padding:30px 5px;word-break:normal;}\n.tg .tg-c3ow{border-color:inherit;text-align:center;vertical-align:top}\n.tg .tg-7btt{border-color:inherit;font-weight:bold;text-align:center;vertical-align:top}\n.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\"><thead>\n  <tr>\n    <th class=\"tg-7btt\">TID</th>\n    <th class=\"tg-7btt\">Itens</th>\n  </tr></thead>\n<tbody>\n  <tr>\n    <td class=\"tg-c3ow\">T1</td>\n    <td class=\"tg-0pky\">Pão, Leite</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T2</td>\n    <td class=\"tg-0pky\">Pão, Fralda, Cerveja, Ovos</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T3</td>\n    <td class=\"tg-0pky\">Leite, Fralda, Cerveja, Coca</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T4</td>\n    <td class=\"tg-0pky\">Pão, Leite, Fralda, Cerveja</td>\n  </tr>\n  <tr>\n    <td class=\"tg-c3ow\">T5</td>\n    <td class=\"tg-0pky\">Pão, Leite, Fralda, Coca</td>\n  </tr>\n  <tr>\n  </tr>\n</tbody>\n</table>\n:::\n\n::: {.column width=\"58%\" .fragment}\n\n- \\{Leite, Fralda\\} $\\Rightarrow$ \\{Cerveja\\} (s = 0,4, c = 0,67)\n- \\{Leite, Cerveja\\} $\\Rightarrow$ \\{Fralda\\} (s = 0,4, c = 1,00)\n- \\{Fralda, Cerveja\\} $\\Rightarrow$ \\{Leite\\} (s = 0,4, c = 0,67)\n- \\{Cerveja\\} $\\Rightarrow$ \\{Fralda, Leite\\} (s = 0,4, c = 0,67)\n- \\{Fralda\\} $\\Rightarrow$ \\{Cerveja, Leite\\} (s = 0,4, c = 0,50)\n- \\{Leite\\} $\\Rightarrow$ \\{Fralda, Cerveja\\} (s = 0,4, c = 0,50)\n\n\n:::\n\n::::\n\n. . .\n\n- Todas as regras acima são originadas do mesmo conjunto frequente: \\{Leite, Fralda, Cerveja\\}\n\n. . .\n\n- Regras originadas do mesmo conjunto frequente têm o mesmo **suporte**, mas diferentes valores para **confiança**.\n\n\n\n\n\n## Tarefa de mineração de regras de associação\n\n\n- Uma estratégia comum adotada pelos algoritmos de mineração de regras de associação consiste em decompor o problema em duas subtarefas:\n  - **Geração do conjunto de itens frequentes:** encontre todos os conjuntos de itens frequentes, ou seja, aqueles cujo suporte seja maior que o *minsup* especificado.\n  - **Geração das regras:** use os conjuntos de itens frequentes para gerar as regras desejadas e calcular sua confiança. Se a confiança for maior ou igual a  *minconf*, então a regra é válida.\n\n\n. . .\n\n- Geração de conjuntos de itens frequentes ainda é computacionalmente cara\n\n\n\n\n## Tarefa de mineração de regras de associação\n\n![](/images/regras/casos.png){.nostretch fig-align=\"center\" width=\"1000px\"}\n\n. . .\n\n\n<p align=\"center\">  \nDados $d$ itens, há $2^d$ possíveis conjuntos de itens candidatos</p>\n\n\n\n## Tarefa de mineração de regras de associação\n\n\n- Para um conjunto contendo $d$ itens distintos:\n    - Total de conjuntos frequentes = $2^d$\n    - Total das possíveis regras de associação:\n    \n:::: {.columns}\n\n::: {.column width=\"42%\"}\n![](/images/regras/nregras.jpg){.nostretch fig-align=\"center\" width=\"1000px\"}\n:::\n\n::: {.column width=\"58%\" .fragment}\n\n$$\\begin{eqnarray*}\nR &=& \\sum \\limits_{k=i}^{d-1} \\left[  \\binom {d} {k} \\ \\times \\sum \\limits_{j = 1}^{d-k} \\binom {d-k} {j} \\right] \\\\ &=& 3^d - 2^{d-1} + 1\n\\end{eqnarray*}$$\n\n<p align=\"center\">  \n**Se d = 5, R = 228 regras**</p>\n\n:::\n\n::::\n\n\n\n# Algoritmo Apriori\n\n## Algoritmo Apriori\n\n- **O princípio do Algoritmo Apriori:** Se um itemset é frequente, os seus subconjuntos devem ser frequentes.\n    - **Exemplo:** Se \\{Leite, Fralda, Cerveja\\} é frequente, todos os subconjuntos desse itemset com dois itens também o são.\n    \n. . .\n\n\n- O **princípio do Apriori** assegura a seguinte propriedade para a medida suporte:\n\n$$\\forall X,Y : (X \\subseteq Y) \\Rightarrow sup(X) \\geqslant sup(Y)$$\n\n- O suporte de um conjunto frequente nunca excede o suporte de seus subconjuntos.\n\n- Essa propriedade do suporte é conhecida como **antimonotônica**.\n\n\n## Importância da Propriedade Antimonotônica no Apriori\n\n- O **algoritmo Apriori** usa essa propriedade para **podar** rapidamente os conjuntos de itens que não são relevantes.\n\n\n. . .\n\n\n- Se um itemset de tamanho *k* (como \\{Pão, Leite\\} não é frequente, então o algoritmo pode **descartar** todos os seus **superconjuntos de tamanho** *k+1*, sem precisar verificá-los.\n\n\n. . .\n\n- Isso reduz significativamente o número de combinações a serem verificadas, tornando o algoritmo mais eficiente.\n\n\n\n\n## Ilustrando o Princípio do Apriori\n\n\n![](/images/regras/apriori.png){.nostretch fig-align=\"center\" width=\"1300px\"}\n\n\n\n## Ilustrando o Princípio do Apriori\n\n\n| TID | Produtos adquiridos           |\n|-----|-------------------------------|\n| 1   | Café, Pão, Manteiga           |\n| 2   | Leite, Cerveja, Pão, Manteiga |\n| 3   | Café, Pão, Manteiga           |\n| 4   | Leite, Café, Pão, Manteiga    |\n| 5   | Cerveja                       |\n| 6   | Manteiga                      |\n| 7   | Pão                           |\n| 8   | Feijão                        |\n| 9   | Arroz, Feijão                 |\n| 10  | Arroz                         |\n|||\n\n\n\n\n## Ilustrando o Princípio do Apriori\n\n\n- **1º passo:** Calcular suporte de conjuntos com 1 item (vamos considerar *minsup* = 0,3)\n\n. . .\n\n<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-llyw{background-color:#c0c0c0;border-color:inherit;text-align:left;vertical-align:top}\n.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\"><thead>\n  <tr>\n    <td class=\"tg-0pky\">Leite</td>\n    <td class=\"tg-0pky\">Sup(Leite) = 0,2</td>\n  </tr></thead>\n<tbody>\n  <tr>\n    <td class=\"tg-llyw\">Café</td>\n    <td class=\"tg-llyw\">Sup(Café) = 0,3</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">Cerveja</td>\n    <td class=\"tg-0pky\">Sup(Cerveja) = 0,2</td>\n  </tr>\n  <tr>\n    <td class=\"tg-llyw\">Pão</td>\n    <td class=\"tg-llyw\">Sup(Pão) = 0,5</td>\n  </tr>\n  <tr>\n    <td class=\"tg-llyw\">Manteiga</td>\n    <td class=\"tg-llyw\">Sup(Manteiga) = 0,5</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">Arroz</td>\n    <td class=\"tg-0pky\">Sup(Arroz) = 0,2</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">Feijão</td>\n    <td class=\"tg-0pky\">Sup(Feijão) = 0,2</td>\n  </tr>\n  <tr></tr>\n</tbody>\n</table>\n\n\n\n## Ilustrando o Princípio do Apriori\n\n\n<br>\n\n- **2º passo:** Calcular suporte de conjuntos com 2 itens (*minsup* = 0,3)\n\n. . .\n\n\n- **Se um item $J$ não é frequente, um conjunto com 2 itens, um dos quais é o item $J$, não pode ser frequente. Conjuntos contendo item $J$ são ignorados.**\n\n\n. . .\n\n\n<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-llyw{background-color:#c0c0c0;border-color:inherit;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\"><thead>\n  <tr>\n    <td class=\"tg-llyw\">Café, Pão</td>\n    <td class=\"tg-llyw\">Sup(Café, Pão) = 0,3</td>\n  </tr></thead>\n<tbody>\n  <tr>\n    <td class=\"tg-llyw\">Café, Manteiga</td>\n    <td class=\"tg-llyw\">Sup(Café, Manteiga) = 0,3</td>\n  </tr>\n  <tr>\n    <td class=\"tg-llyw\">Manteiga, Pão</td>\n    <td class=\"tg-llyw\">Sup(Manteiga, Pão) = 0,4</td>\n  </tr>\n</tbody>\n</table>\n\n\n\n\n\n## Ilustrando o Princípio do Apriori\n\n\n<br>\n\n\n- **3º passo:** Calcular suporte de conjuntos com 3 itens (*minsup* = 0,3)\n\n. . .\n\n- **Se um conjunto de itens $(J,K)$ não é frequente, um conjunto com 3 itens que inclua o conjunto de itens $(J,K)$ não pode ser frequente. Conjuntos contendo itens $(J,K)$ são ignorados.**\n\n\n. . .\n\n\n<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-llyw{background-color:#c0c0c0;border-color:inherit;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\"><thead>\n  <tr>\n    <td class=\"tg-llyw\">Café, Pão, Manteiga</td>\n    <td class=\"tg-llyw\">Sup(Café, Pão, Manteiga) = 0,3</td>\n  </tr></thead>\n</table>\n\n\n\n\n## Ilustrando o Princípio do Apriori\n\n\n**Cálculo da Confiança: ** *minconf* = 0,8 \n\n\n. . .\n\n- \\{Café, Pão\\}\n\n\n<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-llyw{background-color:#c0c0c0;border-color:inherit;text-align:left;vertical-align:top}\n.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\"><thead>\n  <tr>\n    <td class=\"tg-llyw\">Regra: SE (café) ENTÃO (pão)</td>\n    <td class=\"tg-llyw\">Confiança = 1,0</td>\n  </tr></thead>\n<tbody>\n  <tr>\n    <td class=\"tg-0pky\">Regra: SE (pão) ENTÃO (café)</td>\n    <td class=\"tg-0pky\">Confiança = 0,6</td>\n  </tr>\n  <tr></tr>\n</tbody>\n</table>\n\n\n. . .\n\n\n- \\{Café, Manteiga\\}\n\n\n<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-llyw{background-color:#c0c0c0;border-color:inherit;text-align:left;vertical-align:top}\n.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\"><thead>\n  <tr>\n    <td class=\"tg-llyw\">Regra: SE (café) ENTÃO (manteiga)</td>\n    <td class=\"tg-llyw\">Confiança = 1,0</td>\n  </tr></thead>\n<tbody>\n  <tr>\n    <td class=\"tg-0pky\">Regra: SE (manteiga) ENTÃO (café)</td>\n    <td class=\"tg-0pky\">Confiança = 0,6</td>\n  </tr>\n  <tr></tr>\n</tbody>\n</table>\n\n. . . \n\n\n- \\{Pão, Manteiga\\}\n\n<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-llyw{background-color:#c0c0c0;border-color:inherit;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\"><thead>\n  <tr>\n    <td class=\"tg-llyw\">Regra: SE (pão) ENTÃO (manteiga)</td>\n    <td class=\"tg-llyw\">Confiança = 0,8</td>\n  </tr></thead>\n<tbody>\n  <tr>\n    <td class=\"tg-llyw\">Regra: SE (manteiga) ENTÃO (pão)</td>\n    <td class=\"tg-llyw\">Confiança = 0,8</td>\n  </tr>\n    <tr></tr>\n</tbody>\n</table>\n\n\n\n## Ilustrando o Princípio do Apriori\n\n\n**Cálculo da Confiança: ** *minconf* = 0,8 \n\n- \\{Café, Pão, Manteiga\\}\n\n<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-llyw{background-color:#c0c0c0;border-color:inherit;text-align:left;vertical-align:top}\n.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\"><thead>\n  <tr>\n    <td class=\"tg-llyw\">Regra: SE (café E pão) ENTÃO (manteiga)</td>\n    <td class=\"tg-llyw\">Confiança = 1,0</td>\n  </tr></thead>\n<tbody>\n  <tr>\n    <td class=\"tg-llyw\">Regra: SE (café E manteiga) ENTÃO (pão)</td>\n    <td class=\"tg-llyw\">Confiança = 1,0</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">Regra: SE (manteiga E pão) ENTÃO (café)</td>\n    <td class=\"tg-0pky\">Confiança = 0,75</td>\n  </tr>\n  <tr>\n    <td class=\"tg-llyw\">Regra: SE (café) ENTÃO (manteiga E pão)</td>\n    <td class=\"tg-llyw\">Confiança = 1,0</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">Regra: SE (pão) ENTÃO (manteiga E café)</td>\n    <td class=\"tg-0pky\">Confiança = 0,6</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">Regra: SE (manteiga) ENTÃO (pão E café)</td>\n    <td class=\"tg-0pky\">Confiança = 0,6</td>\n  </tr>\n  <tr></tr>\n</tbody>\n</table>\n\n\n\n## Considerações Importantes\n\n<br>\n\n- Utilizando um único valor para *minsup* implica que o algoritmo assume que todos os itens possuem frequências similares\n\n\n. . .\n\n\n- Em muitos domínios, isso não é válido, pois alguns itens aparecem muito frequentemente enquanto outros raramente aparecem\n    - Por exemplo, em um supermercado, clientes compram panelas e frigideiras muito menos frequentemente do que pão e leite\n\n\n\n## Considerações Importantes\n\n<br>\n\n\n- Escolha de *minsup*\n    - Diminuir o valor de *minsup* resulta em maior quantidade de itemsets frequentes\n    - Isso pode aumentar o número de candidatos e a dimensão máxima dos itemsets frequentes (gerando regras com mais condições/conclusões)\n\n\n. . .\n\n\n- Número de itens no conjunto de exemplos\n    - Quanto mais itens, maior o espaço necessário para armazenar o suporte de cada item\n    - Se o número de itemsets frequentes também for grande, o tempo de processamento pode aumentar consideravelmente\n    \n\n\n## Considerações Importantes\n\n- Número de transações (tamanho do banco de dados ou conjunto de exemplos)\n    - O tempo de execução pode aumentar com o aumento do número de transações, uma vez que o algoritmo Apriori efetua múltiplas varreduras\n    \n. . .\n\n\n- Se há uma grande variação na frequência dos itens, há dois problemas\n    - Se *minsup* for muito grande as regras que envolvem itens raros não serão encontradas\n    - Para encontrar regras que envolvem tanto itens frequentes como itens raros, *minsup* deve ser bem pequeno\n        - Isso pode causar uma explosão combinatória já que os itens frequentes (1-itemsets) serão associados entre si de todas as formas possíveis, anulando a poda no reticulado\n        \n        \n        \n## Considerações Importantes\n\n<p></p>\n\n- Entretanto, regras com baixo suporte são de pouco interesse sob a perspectiva do negócio, uma vez que não faz sentido promover itens que os clientes compram pouco em conjunto.\n\n. . .\n\n- Por essa razão, o suporte normalmente é usado para eliminar regras pouco interessantes.\n\n\n. . .\n\n\n- Enquanto a confiança é uma medida da acurácia da regra, o suporte corresponde à sua significância estatística.\n\n\n. . . \n\n\n- Juntas, essas são as medidas de interesse mais usadas na literatura de mineração de regras de associação.\n\n\n\n\n## Reduzindo o número de regras\n\n\n<br>\n\n-  **Suporte** e **confiança** são usados como filtros, para diminuir o número de regras geradas, gerando apenas regras de melhor qualidade\n\n. . .\n\n\n- Mas, se considerarmos a regra: Se $X \\Rightarrow Y$ com confiança de 90\\%, podemos garantir que seja uma regra interessante?\n\n\n. . .\n\n\n- A regra: Se $X \\Rightarrow Y$ com  confiança de $90\\%$ não é interessante, se $Y$ aparece em cerca de $90\\%$ das transações, pois a regra não acrescentou nada em termos de conhecimento.\n\n\n## Reduzindo o número de regras\n\n\n- Já a regra: Se $W \\Rightarrow Z$ com confiança de $70\\%$ é muito mais importante se $Z$ aparece, digamos, em 10\\% das transações. \n\n\n. . . \n\n\n- Um índice estatístico comumente utilizado para definir o grau de interesse de uma regra de associação é denominado *lift*.\n\n. . .\n\n\n-  O *lift* de uma regra de associação $X \\Rightarrow Y$ indica o quanto mais  frequente  torna-se $Y$, quando $X$ ocorre. \n\n. . .\n\n\n- Esta medida é dada por:\n\n$$lift = \\dfrac{Conf(X \\Rightarrow Y)}{\\mathbf{\\sigma}(Y)} = \\dfrac{\\mathbf{\\sigma}(X \\cup Y)}{\\mathbf{\\sigma}(X)\\mathbf{\\sigma}(Y)}$$\n\n\n\n\n\n## Reduzindo o número de regras\n\n\n| TID | Produtos adquiridos           |\n|-----|-------------------------------|\n| 1   | Café, Pão, Manteiga           |\n| 2   | Leite, Cerveja, Pão, Manteiga |\n| 3   | Café, Pão, Manteiga           |\n| 4   | Leite, Café, Pão, Manteiga    |\n| 5   | Cerveja                       |\n| 6   | Manteiga                      |\n| 7   | Pão                           |\n| 8   | Feijão                        |\n| 9   | Arroz, Feijão                 |\n| 10  | Arroz                         |\n|||\n\n\n## Reduzindo o número de regras\n\n\nVoltando ao exemplo: regras finais (*minsup* = 0,3 e *minconf* = 0,8)\n\n\n. . .\n\n<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\"><thead>\n  <tr>\n    <td class=\"tg-0pky\">**Regra 01:** SE (café) ENTÃO (pão)</td>\n    <td class=\"tg-0pky\">Confiança = 1,0</td>\n  </tr></thead>\n<tbody>\n  <tr>\n    <td class=\"tg-0pky\">**Regra 02:** SE (café) ENTÃO (manteiga)</td>\n    <td class=\"tg-0pky\">Confiança = 1,0</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">**Regra 03:** SE (pão) ENTÃO (manteiga)</td>\n    <td class=\"tg-0pky\">Confiança = 0,8</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">**Regra 04:** SE (manteiga) ENTÃO (pão)</td>\n    <td class=\"tg-0pky\">Confiança = 0,8</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">**Regra 05:** SE (café E pão) ENTÃO (manteiga)</td>\n    <td class=\"tg-0pky\">Confiança = 1,0</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">**Regra 06:** SE (café E manteiga) ENTÃO (pão)</td>\n    <td class=\"tg-0pky\">Confiança = 1,0</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">**Regra 07:** SE (café) ENTÃO (manteiga E pão)</td>\n    <td class=\"tg-0pky\">Confiança = 1,0</td>\n  </tr>\n  <tr></tr>\n</tbody>\n</table>\n\n\n## Reduzindo o número de regras\n\nVoltando ao exemplo: regras finais (*minsup* = 0,3 e *minconf* = 0,8)\n\n\n. . .\n\n\n<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:40px;\n  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}\n</style>\n<table class=\"tg\"><thead>\n  <tr>\n    <td class=\"tg-0pky\">**Regra 01:** *lift* = $1,0 \\div 0,5 = 2,0$</td>\n  </tr></thead>\n<tbody>\n  <tr>\n    <td class=\"tg-0pky\">**Regra 02:** *lift* = $1,0 \\div 0,5 = 2,0$</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">**Regra 03:** *lift* = $0,8 \\div 0,5 = 1,6$</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">**Regra 04:** *lift* = $0,8 \\div 0,5 = 1,6$</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">**Regra 05:** *lift* = $1,0 \\div 0,5 = 2,0$</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">**Regra 06:** *lift* = $1,0 \\div 0,5 = 2,0$</td>\n  </tr>\n  <tr>\n    <td class=\"tg-0pky\">**Regra 07:** *lift* = $1,0 \\div 0,4 = 2,5$</td>\n  </tr>\n  <tr></tr>\n</tbody>\n</table>\n\n. . .\n\n**Interpretação:** Para a regra 01, por exemplo, temos que clientes que compram café tem duas vezes mais chances de comprarem pão.\n\n\n\n## Reduzindo o número de regras\n\n<br>\n\n- Se *lift*$(X \\Rightarrow Y) = 1$, então $X$ e $Y$ são independentes. Se *lift*$(X \\Rightarrow Y) > 1$, então $X$ e $Y$ são positivamente dependentes. Se *lift*$(X \\Rightarrow Y) < 1$, então $X$ e $Y$ são negativamente dependentes. \n\n\n. . .\n\n- Esta medida varia entre 0 e $\\infty$ e possui interpretação bastante simples: quanto maior o valor do *lift*, mais interessante a regra, pois $X$ aumentou (*“lifted”*) $Y$ numa maior taxa.\n\n\n\n## Desafios do Algoritmo Apriori\n\n<br>\n\n- **Escalabilidade**: Pode ser ineficiente com grandes conjuntos de dados.\n\n. . .\n\n\n- **Número de Regras**: Em bases de dados grandes, o número de regras geradas pode ser muito alto.\n\n. . .\n\n\n- **Ajuste de Parâmetros**: Definir o suporte e confiança mínimos pode ser desafiador e impactar os resultados.\n\n\n\n\n\n\n\n## Tipos de dados usados em Associação\n\n<br>\n\n- Somente **inteiro** ou **nominal**.\n \n\n. . .\n\n\n\n- Se o atributo for **contínuo**, ele precisa ser **discretizado**.\n\n\n. . .\n\n\n- Transformar atributos categóricos em variáveis binárias assimétricas\n\n\n\n\n## Aplicações no Mundo Real\n\n- **Sistemas de Recomendação**: Sugestões de produtos com base no histórico de compras.\n\n. . .\n\n\n- **Análise de Cesta de Compras**: Identificação de itens frequentemente comprados juntos.\n\n\n. . .\n\n\n- Elaboração de **catálogos de produtos**.\n\n\n\n. . .\n\n\n- Layout de prateleiras (**produtos relacionados tendem a ser colocados perto nas prateleiras**).\n\n\n. . .\n\n\n- **Marketing e Vendas**: Ofertas personalizadas para clientes com base em seu comportamento.\n\n. . .\n\n\n- **Saúde**: Identificação de padrões entre doenças e tratamentos.\n\n\n\n## Exemplo de Regras de Associação com a Base de Dados `Groceries`\n\n<br>\n\nA base de dados `Groceries` está disponível no pacote `arules` e contém 9.835 transações (cestas de compras) de um supermercado, com 169 itens diferentes.\n\n. . .\n\nNosso objetivo é descobrir regras como \"se um cliente compra leite, ovos e açúcar, ele também compra farinha?\".\n\n\n## Exemplo de Regras de Associação com a Base de Dados `Groceries`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Carregar pacotes\nload <- function(pkg){\n  new.pkg <- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n  if (length(new.pkg))\n    install.packages(new.pkg, dependencies = TRUE)\n  sapply(pkg, require, character.only = TRUE)\n} \n\npackages <- c(\"tidyverse\",\"readxl\", \"knitr\", \"ggplot2\", \"lubridate\", \"arules\", \n              \"arulesViz\", \"plyr\", \"dplyr\", \"RColorBrewer\", \"recommenderlab\",'tidyquant')\nload(packages)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     tidyverse         readxl          knitr        ggplot2      lubridate \n          TRUE           TRUE           TRUE           TRUE           TRUE \n        arules      arulesViz           plyr          dplyr   RColorBrewer \n          TRUE           TRUE           TRUE           TRUE           TRUE \nrecommenderlab      tidyquant \n          TRUE           TRUE \n```\n\n\n:::\n:::\n\n\n## Exemplo de Regras de Associação com a Base de Dados `Groceries`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 2. Carregar a base de dados Groceries\n# A base já vem no formato de transações, o que facilita o trabalho.\ndata(\"Groceries\")\n\n# 3. Explorar a base de dados\n# O 'Groceries' já é um objeto de transações.\n# Dimensões da base (transações x itens)\ndim(Groceries)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9835  169\n```\n\n\n:::\n\n```{.r .cell-code}\nproducts = itemLabels(Groceries)\nproducts %>% head(n=18)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"frankfurter\"       \"sausage\"           \"liver loaf\"       \n [4] \"ham\"               \"meat\"              \"finished products\"\n [7] \"organic sausage\"   \"chicken\"           \"turkey\"           \n[10] \"pork\"              \"beef\"              \"hamburger meat\"   \n[13] \"fish\"              \"citrus fruit\"      \"tropical fruit\"   \n[16] \"pip fruit\"         \"grapes\"            \"berries\"          \n```\n\n\n:::\n:::\n\n\n## Exemplo de Regras de Associação com a Base de Dados `Groceries`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ver as 5 primeiras transações\ninspect(Groceries[1:5])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    items                     \n[1] {citrus fruit,            \n     semi-finished bread,     \n     margarine,               \n     ready soups}             \n[2] {tropical fruit,          \n     yogurt,                  \n     coffee}                  \n[3] {whole milk}              \n[4] {pip fruit,               \n     yogurt,                  \n     cream cheese ,           \n     meat spreads}            \n[5] {other vegetables,        \n     whole milk,              \n     condensed milk,          \n     long life bakery product}\n```\n\n\n:::\n:::\n\n\n## Exemplo de Regras de Associação com a Base de Dados `Groceries`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plotar a frequência dos 20 itens mais comuns\n# O gráfico nos ajuda a definir o suporte mínimo\nitemFrequencyPlot(Groceries, topN = 20, type = \"relative\")\n```\n\n::: {.cell-output-display}\n![](associacao_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n## Exemplo de Regras de Associação com a Base de Dados `Groceries`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 4. Aplicar o algoritmo Apriori para encontrar regras\n# Vamos usar um suporte e confiança mais baixos, pois os itens são mais variados.\n# 'support' = 0.01 significa que a regra deve aparecer em 1% das transações.\n# 'confidence' = 0.5 significa que a regra deve ser verdadeira em 50% dos casos.\nrules <- apriori(Groceries, parameter = list(support = 0.01, confidence = 0.5))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nApriori\n\nParameter specification:\n confidence minval smax arem  aval originalSupport maxtime support minlen\n        0.5    0.1    1 none FALSE            TRUE       5    0.01      1\n maxlen target  ext\n     10  rules TRUE\n\nAlgorithmic control:\n filter tree heap memopt load sort verbose\n    0.1 TRUE TRUE  FALSE TRUE    2    TRUE\n\nAbsolute minimum support count: 98 \n\nset item appearances ...[0 item(s)] done [0.00s].\nset transactions ...[169 item(s), 9835 transaction(s)] done [0.00s].\nsorting and recoding items ... [88 item(s)] done [0.00s].\ncreating transaction tree ... done [0.00s].\nchecking subsets of size 1 2 3 4 done [0.00s].\nwriting ... [15 rule(s)] done [0.00s].\ncreating S4 object  ... done [0.00s].\n```\n\n\n:::\n:::\n\n\n## Exemplo de Regras de Associação com a Base de Dados `Groceries`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 5. Explorar e inspecionar as regras encontradas\n# Vamos ordenar as regras por lift para encontrar as associações mais fortes.\nrules_sorted <- sort(rules, by = \"lift\", decreasing = TRUE)\n\n# Inspecionar as 10 melhores regras\ninspect(head(rules_sorted, n = 10))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     lhs                                  rhs                support   \n[1]  {citrus fruit, root vegetables}   => {other vegetables} 0.01037112\n[2]  {tropical fruit, root vegetables} => {other vegetables} 0.01230300\n[3]  {root vegetables, rolls/buns}     => {other vegetables} 0.01220132\n[4]  {root vegetables, yogurt}         => {other vegetables} 0.01291307\n[5]  {curd, yogurt}                    => {whole milk}       0.01006609\n[6]  {other vegetables, butter}        => {whole milk}       0.01148958\n[7]  {tropical fruit, root vegetables} => {whole milk}       0.01199797\n[8]  {root vegetables, yogurt}         => {whole milk}       0.01453991\n[9]  {other vegetables, domestic eggs} => {whole milk}       0.01230300\n[10] {yogurt, whipped/sour cream}      => {whole milk}       0.01087951\n     confidence coverage   lift     count\n[1]  0.5862069  0.01769192 3.029608 102  \n[2]  0.5845411  0.02104728 3.020999 121  \n[3]  0.5020921  0.02430097 2.594890 120  \n[4]  0.5000000  0.02582613 2.584078 127  \n[5]  0.5823529  0.01728521 2.279125  99  \n[6]  0.5736041  0.02003050 2.244885 113  \n[7]  0.5700483  0.02104728 2.230969 118  \n[8]  0.5629921  0.02582613 2.203354 143  \n[9]  0.5525114  0.02226741 2.162336 121  \n[10] 0.5245098  0.02074225 2.052747 107  \n```\n\n\n:::\n:::\n\n\n\n## Exemplo de Regras de Associação com a Base de Dados `Groceries`\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\n# 6. Visualizar as regras (opcional)\nplot(rules_sorted, method = \"graph\", engine = \"htmlwidget\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-4fcdec2886d6b5cffeff\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-4fcdec2886d6b5cffeff\">{\"x\":{\"nodes\":{\"id\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],\"label\":[\"citrus fruit\",\"tropical fruit\",\"pip fruit\",\"root vegetables\",\"other vegetables\",\"whole milk\",\"butter\",\"curd\",\"yogurt\",\"whipped/sour cream\",\"domestic eggs\",\"rolls/buns\",\"rule 1\",\"rule 2\",\"rule 3\",\"rule 4\",\"rule 5\",\"rule 6\",\"rule 7\",\"rule 8\",\"rule 9\",\"rule 10\",\"rule 11\",\"rule 12\",\"rule 13\",\"rule 14\",\"rule 15\"],\"group\":[1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],\"value\":[1,1,1,1,1,1,1,1,1,1,1,1,3.475,19.15000000000001,18.325,24.1,1,12.55,16.675,37.3,19.15000000000001,7.599999999999996,22.45,29.05,42.24999999999999,100,38.125],\"color\":[\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#EE1B1B\",\"#EE1E1E\",\"#EE8181\",\"#EE8484\",\"#EEB5B5\",\"#EEBABA\",\"#EEBCBC\",\"#EEBFBF\",\"#EEC4C4\",\"#EED2D2\",\"#EED4D4\",\"#EED5D5\",\"#EED7D7\",\"#EED9D9\",\"#EEDCDC\"],\"title\":[\"citrus fruit\",\"tropical fruit\",\"pip fruit\",\"root vegetables\",\"other vegetables\",\"whole milk\",\"butter\",\"curd\",\"yogurt\",\"whipped/sour cream\",\"domestic eggs\",\"rolls/buns\",\"<B>[1]<\\/B><BR><B>{citrus fruit,<BR>&nbsp;&nbsp;root vegetables}<\\/B><BR>&nbsp;&nbsp; => <B>{other vegetables}<\\/B><BR><BR>support = 0.0104<BR>confidence = 0.586<BR>coverage = 0.0177<BR>lift = 3.03<BR>count = 102<BR>order = 3<BR>id = 1\",\"<B>[2]<\\/B><BR><B>{tropical fruit,<BR>&nbsp;&nbsp;root vegetables}<\\/B><BR>&nbsp;&nbsp; => <B>{other vegetables}<\\/B><BR><BR>support = 0.0123<BR>confidence = 0.585<BR>coverage = 0.021<BR>lift = 3.02<BR>count = 121<BR>order = 3<BR>id = 2\",\"<B>[3]<\\/B><BR><B>{root vegetables,<BR>&nbsp;&nbsp;rolls/buns}<\\/B><BR>&nbsp;&nbsp; => <B>{other vegetables}<\\/B><BR><BR>support = 0.0122<BR>confidence = 0.502<BR>coverage = 0.0243<BR>lift = 2.59<BR>count = 120<BR>order = 3<BR>id = 3\",\"<B>[4]<\\/B><BR><B>{root vegetables,<BR>&nbsp;&nbsp;yogurt}<\\/B><BR>&nbsp;&nbsp; => <B>{other vegetables}<\\/B><BR><BR>support = 0.0129<BR>confidence = 0.5<BR>coverage = 0.0258<BR>lift = 2.58<BR>count = 127<BR>order = 3<BR>id = 4\",\"<B>[5]<\\/B><BR><B>{curd,<BR>&nbsp;&nbsp;yogurt}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0101<BR>confidence = 0.582<BR>coverage = 0.0173<BR>lift = 2.28<BR>count = 99<BR>order = 3<BR>id = 5\",\"<B>[6]<\\/B><BR><B>{other vegetables,<BR>&nbsp;&nbsp;butter}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0115<BR>confidence = 0.574<BR>coverage = 0.02<BR>lift = 2.24<BR>count = 113<BR>order = 3<BR>id = 6\",\"<B>[7]<\\/B><BR><B>{tropical fruit,<BR>&nbsp;&nbsp;root vegetables}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.012<BR>confidence = 0.57<BR>coverage = 0.021<BR>lift = 2.23<BR>count = 118<BR>order = 3<BR>id = 7\",\"<B>[8]<\\/B><BR><B>{root vegetables,<BR>&nbsp;&nbsp;yogurt}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0145<BR>confidence = 0.563<BR>coverage = 0.0258<BR>lift = 2.2<BR>count = 143<BR>order = 3<BR>id = 8\",\"<B>[9]<\\/B><BR><B>{other vegetables,<BR>&nbsp;&nbsp;domestic eggs}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0123<BR>confidence = 0.553<BR>coverage = 0.0223<BR>lift = 2.16<BR>count = 121<BR>order = 3<BR>id = 9\",\"<B>[10]<\\/B><BR><B>{yogurt,<BR>&nbsp;&nbsp;whipped/sour cream}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0109<BR>confidence = 0.525<BR>coverage = 0.0207<BR>lift = 2.05<BR>count = 107<BR>order = 3<BR>id = 10\",\"<B>[11]<\\/B><BR><B>{root vegetables,<BR>&nbsp;&nbsp;rolls/buns}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0127<BR>confidence = 0.523<BR>coverage = 0.0243<BR>lift = 2.05<BR>count = 125<BR>order = 3<BR>id = 11\",\"<B>[12]<\\/B><BR><B>{pip fruit,<BR>&nbsp;&nbsp;other vegetables}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0135<BR>confidence = 0.518<BR>coverage = 0.0261<BR>lift = 2.03<BR>count = 133<BR>order = 3<BR>id = 12\",\"<B>[13]<\\/B><BR><B>{tropical fruit,<BR>&nbsp;&nbsp;yogurt}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0151<BR>confidence = 0.517<BR>coverage = 0.0293<BR>lift = 2.02<BR>count = 149<BR>order = 3<BR>id = 13\",\"<B>[14]<\\/B><BR><B>{other vegetables,<BR>&nbsp;&nbsp;yogurt}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0223<BR>confidence = 0.513<BR>coverage = 0.0434<BR>lift = 2.01<BR>count = 219<BR>order = 3<BR>id = 14\",\"<B>[15]<\\/B><BR><B>{other vegetables,<BR>&nbsp;&nbsp;whipped/sour cream}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0146<BR>confidence = 0.507<BR>coverage = 0.0289<BR>lift = 1.98<BR>count = 144<BR>order = 3<BR>id = 15\"],\"shape\":[\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\"],\"x\":[1,-0.3499036222284372,-0.7041806828703729,0.2803809211424459,-0.01300573332647104,-0.04730871786210267,-1,0.8202555648570362,0.3020754305583244,0.0086876365719184,-0.9974789313644385,0.210835385331428,0.5707036409562105,-0.09222176059707676,0.1854275638189558,0.4368458870738836,0.4654581967705371,-0.5101831160461798,-0.1000839315019324,0.3271266359737846,-0.5173728624667042,0.1419807337800918,0.1207231809974219,-0.3723479049926662,-0.1610138693129376,0.1274062584358773,-0.07042528247922852],\"y\":[-0.7508062356631362,-0.4786627381368593,0.8828253107777502,-0.4055184304600721,-0.06865163387936613,0.1765160431699873,0.3277512440981978,0.9835785581771554,0.2923035892024117,1,-0.3036836667907213,-1,-0.46971454890201,-0.5579426638910314,-0.6782559731280313,-0.09343351991443194,0.6106594378812289,0.1885714471769191,-0.3133677003646216,0.01872546860305047,-0.112318823894817,0.6720785093598576,-0.4891888297970812,0.4540860031875051,-0.02748213386135223,0.3046154027582657,0.5330986009956247]},\"edges\":{\"from\":[1,4,2,4,4,12,4,9,8,9,5,7,2,4,4,9,5,11,9,10,4,12,3,5,2,9,5,9,5,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],\"to\":[13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6],\"arrows\":[\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"physics\":false},\"manipulation\":{\"enabled\":false},\"edges\":{\"smooth\":false},\"physics\":{\"stabilization\":false},\"interaction\":{\"hover\":true,\"zoomSpeed\":1}},\"groups\":[\"1\",\"2\"],\"width\":null,\"height\":null,\"idselection\":{\"enabled\":true,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\"},\"byselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"igraphlayout\":{\"type\":\"square\"},\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\",\"highlight\":{\"enabled\":true,\"hoverNearest\":true,\"degree\":1,\"algorithm\":\"all\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":false,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n## Exemplo de Regras de Associação com a Base de Dados `Groceries`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 7. Filtrar regras para um item específico\n# Vamos encontrar regras que levam à compra de \"whole milk\" (leite integral).\n# 'rhs' = right-hand side (consequente)\nrules_milk <- apriori(Groceries,\n                      parameter = list(support = 0.01, confidence = 0.5),\n                      appearance = list(rhs = \"whole milk\", default = \"lhs\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nApriori\n\nParameter specification:\n confidence minval smax arem  aval originalSupport maxtime support minlen\n        0.5    0.1    1 none FALSE            TRUE       5    0.01      1\n maxlen target  ext\n     10  rules TRUE\n\nAlgorithmic control:\n filter tree heap memopt load sort verbose\n    0.1 TRUE TRUE  FALSE TRUE    2    TRUE\n\nAbsolute minimum support count: 98 \n\nset item appearances ...[1 item(s)] done [0.00s].\nset transactions ...[169 item(s), 9835 transaction(s)] done [0.00s].\nsorting and recoding items ... [88 item(s)] done [0.00s].\ncreating transaction tree ... done [0.00s].\nchecking subsets of size 1 2 3 4 done [0.00s].\nwriting ... [11 rule(s)] done [0.00s].\ncreating S4 object  ... done [0.00s].\n```\n\n\n:::\n:::\n\n\n## Exemplo de Regras de Associação com a Base de Dados `Groceries`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ordenar e inspecionar as regras sobre \"whole milk\"\nrules_milk_sorted <- sort(rules_milk, by = \"lift\", decreasing = TRUE)\ninspect(rules_milk_sorted)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     lhs                                       rhs          support   \n[1]  {curd, yogurt}                         => {whole milk} 0.01006609\n[2]  {other vegetables, butter}             => {whole milk} 0.01148958\n[3]  {tropical fruit, root vegetables}      => {whole milk} 0.01199797\n[4]  {root vegetables, yogurt}              => {whole milk} 0.01453991\n[5]  {other vegetables, domestic eggs}      => {whole milk} 0.01230300\n[6]  {yogurt, whipped/sour cream}           => {whole milk} 0.01087951\n[7]  {root vegetables, rolls/buns}          => {whole milk} 0.01270971\n[8]  {pip fruit, other vegetables}          => {whole milk} 0.01352313\n[9]  {tropical fruit, yogurt}               => {whole milk} 0.01514997\n[10] {other vegetables, yogurt}             => {whole milk} 0.02226741\n[11] {other vegetables, whipped/sour cream} => {whole milk} 0.01464159\n     confidence coverage   lift     count\n[1]  0.5823529  0.01728521 2.279125  99  \n[2]  0.5736041  0.02003050 2.244885 113  \n[3]  0.5700483  0.02104728 2.230969 118  \n[4]  0.5629921  0.02582613 2.203354 143  \n[5]  0.5525114  0.02226741 2.162336 121  \n[6]  0.5245098  0.02074225 2.052747 107  \n[7]  0.5230126  0.02430097 2.046888 125  \n[8]  0.5175097  0.02613116 2.025351 133  \n[9]  0.5173611  0.02928317 2.024770 149  \n[10] 0.5128806  0.04341637 2.007235 219  \n[11] 0.5070423  0.02887646 1.984385 144  \n```\n\n\n:::\n:::\n\n\n## Exemplo de Regras de Associação com a Base de Dados `Groceries`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 8. Visualizar as regras (opcional)\nplot(rules_milk_sorted[1:10], method = \"graph\", engine = \"htmlwidget\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-f43be6f5c7bc79656d89\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f43be6f5c7bc79656d89\">{\"x\":{\"nodes\":{\"id\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\"label\":[\"tropical fruit\",\"pip fruit\",\"root vegetables\",\"other vegetables\",\"whole milk\",\"butter\",\"curd\",\"yogurt\",\"whipped/sour cream\",\"domestic eggs\",\"rolls/buns\",\"rule 1\",\"rule 2\",\"rule 3\",\"rule 4\",\"rule 5\",\"rule 6\",\"rule 7\",\"rule 8\",\"rule 9\",\"rule 10\"],\"group\":[1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2],\"value\":[1,1,1,1,1,1,1,1,1,1,1,1,12.55,16.675,37.3,19.15000000000001,7.599999999999996,22.45,29.05,42.24999999999999,100],\"color\":[\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#CBD2FC\",\"#EE1B1B\",\"#EE3A3A\",\"#EE4747\",\"#EE5F5F\",\"#EE8484\",\"#EEC4C4\",\"#EEC8C8\",\"#EED2D2\",\"#EED2D2\",\"#EEDCDC\"],\"title\":[\"tropical fruit\",\"pip fruit\",\"root vegetables\",\"other vegetables\",\"whole milk\",\"butter\",\"curd\",\"yogurt\",\"whipped/sour cream\",\"domestic eggs\",\"rolls/buns\",\"<B>[1]<\\/B><BR><B>{curd,<BR>&nbsp;&nbsp;yogurt}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0101<BR>confidence = 0.582<BR>coverage = 0.0173<BR>lift = 2.28<BR>count = 99<BR>order = 3<BR>id = 1\",\"<B>[2]<\\/B><BR><B>{other vegetables,<BR>&nbsp;&nbsp;butter}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0115<BR>confidence = 0.574<BR>coverage = 0.02<BR>lift = 2.24<BR>count = 113<BR>order = 3<BR>id = 2\",\"<B>[3]<\\/B><BR><B>{tropical fruit,<BR>&nbsp;&nbsp;root vegetables}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.012<BR>confidence = 0.57<BR>coverage = 0.021<BR>lift = 2.23<BR>count = 118<BR>order = 3<BR>id = 3\",\"<B>[4]<\\/B><BR><B>{root vegetables,<BR>&nbsp;&nbsp;yogurt}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0145<BR>confidence = 0.563<BR>coverage = 0.0258<BR>lift = 2.2<BR>count = 143<BR>order = 3<BR>id = 4\",\"<B>[5]<\\/B><BR><B>{other vegetables,<BR>&nbsp;&nbsp;domestic eggs}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0123<BR>confidence = 0.553<BR>coverage = 0.0223<BR>lift = 2.16<BR>count = 121<BR>order = 3<BR>id = 5\",\"<B>[6]<\\/B><BR><B>{yogurt,<BR>&nbsp;&nbsp;whipped/sour cream}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0109<BR>confidence = 0.525<BR>coverage = 0.0207<BR>lift = 2.05<BR>count = 107<BR>order = 3<BR>id = 6\",\"<B>[7]<\\/B><BR><B>{root vegetables,<BR>&nbsp;&nbsp;rolls/buns}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0127<BR>confidence = 0.523<BR>coverage = 0.0243<BR>lift = 2.05<BR>count = 125<BR>order = 3<BR>id = 7\",\"<B>[8]<\\/B><BR><B>{pip fruit,<BR>&nbsp;&nbsp;other vegetables}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0135<BR>confidence = 0.518<BR>coverage = 0.0261<BR>lift = 2.03<BR>count = 133<BR>order = 3<BR>id = 8\",\"<B>[9]<\\/B><BR><B>{tropical fruit,<BR>&nbsp;&nbsp;yogurt}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0151<BR>confidence = 0.517<BR>coverage = 0.0293<BR>lift = 2.02<BR>count = 149<BR>order = 3<BR>id = 9\",\"<B>[10]<\\/B><BR><B>{other vegetables,<BR>&nbsp;&nbsp;yogurt}<\\/B><BR>&nbsp;&nbsp; => <B>{whole milk}<\\/B><BR><BR>support = 0.0223<BR>confidence = 0.513<BR>coverage = 0.0434<BR>lift = 2.01<BR>count = 219<BR>order = 3<BR>id = 10\"],\"shape\":[\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"box\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\",\"circle\"],\"x\":[0.4408927176842805,-1,-0.08872769687343396,-0.3386836984316385,-0.03490274050140685,-0.1930362889688675,1,0.2886775087251872,0.7092282744420604,-0.8817196203082861,-0.5956073096670896,0.5488124728967834,-0.1541423278817151,0.1384479876166471,0.03357361253502744,-0.5282415527248332,0.3919453406901861,-0.3376827408089684,-0.558693443374367,0.33466231652892,-0.005582427988801819],\"y\":[-0.7610418082909359,-0.03795497016020921,-0.7544051154962338,0.314889947024535,-0.06416162873981368,1,-0.05039419461669614,-0.05616774449760265,0.6135849382753937,0.5891281839242022,-1,-0.04979315410146889,0.5324285311806154,-0.5986512218381961,-0.3760292504784556,0.3098737888161553,0.2816722244749152,-0.6163171558172069,0.01133988595953994,-0.3771026087040495,0.1914245626683673]},\"edges\":{\"from\":[7,8,4,6,1,3,3,8,4,10,8,9,3,11,2,4,1,8,4,8,12,13,14,15,16,17,18,19,20,21],\"to\":[12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,5,5,5,5,5,5,5,5,5,5],\"arrows\":[\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"physics\":false},\"manipulation\":{\"enabled\":false},\"edges\":{\"smooth\":false},\"physics\":{\"stabilization\":false},\"interaction\":{\"hover\":true,\"zoomSpeed\":1}},\"groups\":[\"1\",\"2\"],\"width\":null,\"height\":null,\"idselection\":{\"enabled\":true,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\"},\"byselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"igraphlayout\":{\"type\":\"square\"},\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\",\"highlight\":{\"enabled\":true,\"hoverNearest\":true,\"degree\":1,\"algorithm\":\"all\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":false,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## Exemplo de Regras de Associação com a Base de Dados `Groceries`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Construindo um sistema de recomendação simples, baseado em regras de associação\nratings_matrix = as(Groceries, \"binaryRatingMatrix\")\n\nrecom = recommenderlab::Recommender(\n  ratings_matrix,\n  method = \"AR\",\n  param = list(supp = 0.01, conf = 0.25, verbose = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nUsed parameters:\nsupport\t =  0.01\nconfidence\t =  0.25\nmaxlen\t =  3\nmaxtime\t =  5\nsort_measure\t =  confidence\nsort_decreasing\t =  TRUE\napriori_control\t =  list()\nverbose\t =  TRUE\nApriori\n\nParameter specification:\n confidence minval smax arem  aval originalSupport maxtime support minlen\n       0.25    0.1    1 none FALSE            TRUE       5    0.01      2\n maxlen target  ext\n      3  rules TRUE\n\nAlgorithmic control:\n filter tree heap memopt load sort verbose\n    0.1 TRUE TRUE  FALSE TRUE    2    TRUE\n\nAbsolute minimum support count: 98 \n\nset item appearances ...[0 item(s)] done [0.00s].\nset transactions ...[169 item(s), 9835 transaction(s)] done [0.00s].\nsorting and recoding items ... [88 item(s)] done [0.00s].\ncreating transaction tree ... done [0.00s].\nchecking subsets of size 1 2 3 done [0.00s].\nwriting ... [170 rule(s)] done [0.00s].\ncreating S4 object  ... done [0.00s].\n\nRule base size: 170 rules.\n```\n\n\n:::\n:::\n\n\n## Exemplo de Regras de Associação com a Base de Dados `Groceries`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Obter os nomes dos itens do modelo treinado\nitems_names <- colnames(ratings_matrix)\n\n# pedido hipotetico\n# Vamos definir o número de passageiros que você quer avaliar\nnum_pedidos <- 2 \nnovos_pedidos <- matrix(0, nrow = num_pedidos, ncol = length(items_names))\ncolnames(novos_pedidos) <- items_names\nrownames(novos_pedidos) <- c(\"Novo_Pedido_01\", \"Novo_Pedido_02\")\n\n# 3. Preencher a matriz com as características de cada passageiro\n# Pedido 1: Salsicha, Café e Sobremesa\nnovos_pedidos[\"Novo_Pedido_01\", \"frankfurter\"] <- 1\nnovos_pedidos[\"Novo_Pedido_01\", \"coffee\"] <- 1\nnovos_pedidos[\"Novo_Pedido_01\", \"dessert\"] <- 1\n\n# Passageiro 2: Peixe, Queijo Fatiado e Leite Integral\nnovos_pedidos[\"Novo_Pedido_02\", \"whole milk\"] <- 1\nnovos_pedidos[\"Novo_Pedido_02\", \"fish\"] <- 1\nnovos_pedidos[\"Novo_Pedido_02\", \"sliced cheese\"] <- 1\n```\n:::\n\n\n\n## Exemplo de Regras de Associação com a Base de Dados `Groceries`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 4. Converter a matriz consolidada para o formato binaryRatingMatrix\nnovos_pedidos_ratings <- as(novos_pedidos, \"binaryRatingMatrix\")\n\n# 5. Gerar as recomendações\nrecommendations <- predict(recom, novos_pedidos_ratings, n = 5)\n\n# Inspecionar as recomendações para ambos os passageiros\nas(recommendations, \"list\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`0`\n[1] \"whole milk\"       \"rolls/buns\"       \"other vegetables\"\n\n$`1`\n[1] \"other vegetables\"\n```\n\n\n:::\n:::\n\n\n",
    "supporting": [
      "associacao_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/vis-9.1.0/vis-network.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/vis-9.1.0/vis-network.min.js\"></script>\n<script src=\"../../site_libs/visNetwork-binding-2.1.2/visNetwork.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}